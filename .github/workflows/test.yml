name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history to compare changes

    - name: Check for app code changes
      id: check-changes
      run: |
        # Check for changes in app-related directories and files
        # For pull requests, compare with the base branch
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD 2>/dev/null || echo "")
        else
          # For pushes, compare with the previous commit
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null || echo "")
        fi
        
        # Define app code patterns to check
        APP_PATTERNS=(
          "src/**"
          "package.json"
          "package-lock.json"
          "pnpm-lock.yaml"
          "bun.lockb"
          "svelte.config.js"
          "vite.config.ts"
          "tsconfig.json"
          "postcss.config.js"
          "tailwind.config.js"
          "app.html"
          "app.css"
          "tests/**"
          "playwright.config.ts"
        )
        
        # Check if any changed files match our app patterns
        HAS_APP_CHANGES=false
        
        if [ -n "$CHANGED_FILES" ]; then
          for pattern in "${APP_PATTERNS[@]}"; do
            if echo "$CHANGED_FILES" | grep -q "$pattern"; then
              HAS_APP_CHANGES=true
              break
            fi
          done
        else
          # If we can't determine changes (first run), run tests anyway
          HAS_APP_CHANGES=true
        fi
        
        echo "has_app_changes=$HAS_APP_CHANGES" >> $GITHUB_OUTPUT
        echo "Changed files:"
        echo "$CHANGED_FILES"
        echo "Has app changes: $HAS_APP_CHANGES"

    - uses: actions/setup-node@v4
      if: steps.check-changes.outputs.has_app_changes == 'true'
      with:
        node-version: lts/*
    - name: Setup Bun
      if: steps.check-changes.outputs.has_app_changes == 'true'
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    - name: Install dependencies with bun
      if: steps.check-changes.outputs.has_app_changes == 'true'
      run: bun install
    - name: Install Playwright Browsers
      if: steps.check-changes.outputs.has_app_changes == 'true'
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      if: steps.check-changes.outputs.has_app_changes == 'true'
      run: npx playwright test
    - name: Publish Test Report
      if: steps.check-changes.outputs.has_app_changes == 'true' && always()
      uses: ctrf-io/github-test-reporter@v1
      with:
        report-path: './ctrf/*.json'

    - name: Skip tests
      if: steps.check-changes.outputs.has_app_changes == 'false'
      run: |
        echo "No changes detected in app code. Skipping tests."
        echo "This test run was skipped because no relevant changes were found in:"
        echo "- src/ directory"
        echo "- package.json and lock files"
        echo "- configuration files (svelte.config.js, vite.config.ts, etc.)"
        echo "- tests/ directory"
        echo "- playwright.config.ts"